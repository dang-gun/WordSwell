<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DGU_EnumToClass</name>
    </assembly>
    <members>
        <member name="T:DGUtility.EnumToClass.EnumList1">
            <summary>
            열거형의 멤버를 분해하여 배열형태로 관리 해주는 클래스.
            </summary>
            <remarks>
            맴버의 값에 중복이 있다면 이 클래스를 사용할 수 없다.
            </remarks>
        </member>
        <member name="P:DGUtility.EnumToClass.EnumList1.EnumType">
            <summary>
            지정된 열거형
            </summary>
        </member>
        <member name="P:DGUtility.EnumToClass.EnumList1.EnumMember">
            <summary>
            분해한 열거형 멤버 데이터
            </summary>
        </member>
        <member name="P:DGUtility.EnumToClass.EnumList1.Count">
            <summary>
            지정된 열거형의 멤버 갯수
            </summary>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumList1.#ctor">
            <summary>
            빈 개체를 생성함.
            </summary>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumList1.#ctor(System.Enum)">
            <summary>
            지정한 열거형 맴버를 분해하여 개체를 생성함.
            </summary>
            <param name="typeData"></param>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumList1.EnumToClass(System.Enum)">
            <summary>
            지정한 열거형 맴버를 분해하여 저장함
            </summary>
            <param name="typeData"></param>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumList1.FindEnumMember(System.String)">
            <summary>
            멤버중 지정한 이름이 있는지 찾습니다.
            </summary>
            <param name="sName"></param>
            <returns></returns>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumList1.FindEnumMember(System.Int32)">
            <summary>
            멤버중 지정한 순서가 있는지 찾습니다.
            </summary>
            <param name="nNumber"></param>
            <returns></returns>
        </member>
        <member name="T:DGUtility.EnumToClass.EnumList2`1">
            <summary>
            지정한 열거형을 리스트로 바꾼다.
            </summary>
            <remarks>
            중복된 값 처리를 위해 변경된 구조.<br />
            중복된 값이 있는 열거형 맴버는 이 클래스로 처리해야 한다.
            </remarks>
            <typeparam name="T">변환할 열거형</typeparam>
        </member>
        <member name="P:DGUtility.EnumToClass.EnumList2`1.EnumMember">
            <summary>
            분해한 열거형 멤버 데이터
            </summary>
        </member>
        <member name="P:DGUtility.EnumToClass.EnumList2`1.Count">
            <summary>
            지정된 열거형의 멤버 갯수
            </summary>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumList2`1.#ctor">
            <summary>
            개체를 생성하고 열거형 리스트로 변환 작업을 시작한다.
            </summary>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumList2`1.EnumToClass">
            <summary>
            지정된 열거형 맴버를 분해하여 리스트로 변환하는 작업을 한다.
            </summary>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumList2`1.FindEnumMember(System.String)">
            <summary>
            멤버중 지정한 이름이 있는지 찾습니다.
            </summary>
            <param name="sName"></param>
            <returns></returns>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumList2`1.FindEnumMember(System.Int32)">
            <summary>
            멤버중 지정한 순서가 있는지 찾습니다.
            </summary>
            <param name="nNumber"></param>
            <returns></returns>
        </member>
        <member name="T:DGUtility.EnumToClass.EnumMemberModel">
            <summary>
            열거형 멤버의 정보를 검색하기 쉽게 저장하는 모델
            </summary>
        </member>
        <member name="P:DGUtility.EnumToClass.EnumMemberModel.Type">
            <summary>
            지정된 열거헝 멤버
            <para>열거형 맴버중에 같은 값을 가진 맴버가 있다면 이 값은 정확하지 않을 수 있다.<br />
            그러므로 이 모델을 사용할때는 Name, Index로만 사용하는것이 좋다.</para>
            </summary>
        </member>
        <member name="P:DGUtility.EnumToClass.EnumMemberModel.Name">
            <summary>
            지정된 열겨헝 멤버의 이름
            </summary>
        </member>
        <member name="P:DGUtility.EnumToClass.EnumMemberModel.Index">
            <summary>
            지정된 열거헝 멤버의 인덱스
            </summary>
        </member>
        <member name="P:DGUtility.EnumToClass.EnumMemberModel.Number">
            <summary>
            숫서(고유번호)
            <para>열거형맴버가 리스트로 변환될때 순서<br />
            열거형 맴버의 인덱스는 중복이 가능해서 그걸 구분하기위한 고유번호로도 사용된다.
            </para>
            </summary>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumMemberModel.#ctor(System.Object)">
            <summary>
            사용할 열거형 멤버를 오브젝트(object)형태로 처리합니다.
            </summary>
            <param name="objData">Enum로 변환이 가능한 대상 개체</param>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumMemberModel.#ctor(System.Object,System.Int32)">
            <summary>
            사용할 열거형 멤버를 오브젝트(object)형태로 처리합니다.
            </summary>
            <param name="objData">Enum로 변환이 가능한 대상 개체</param>
            <param name="nNumber">순서 정보</param>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumMemberModel.#ctor(System.Enum,System.Int32,System.String,System.Int32)">
            <summary>
            사용할 열거형 멤버 생성하고 정보를 저장한다.
            </summary>
            <param name="typeData">이 맴버를 생성할때 사용하는 열거형 맴버</param>
            <param name="nIndex">맴버가 가지고 있는 값</param>
            <param name="sName">맴버의 이름</param>
            <param name="nNumber">순서 정보</param>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumMemberModel.#ctor(System.Enum)">
            <summary>
            사용할 열거형 멤버를 지정한다.
            </summary>
            <param name="typeData">이 맴버를 생성할때 사용하는 열거형 맴버</param>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumMemberModel.#ctor(System.Enum,System.Int32)">
            <summary>
            사용할 열거형 멤버를 지정한다.
            </summary>
            <param name="typeData">이 맴버를 생성할때 사용하는 열거형 맴버</param>
            <param name="nNumber">순서 정보</param>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumMemberModel.SetData(System.Enum)">
            <summary>
            사용할 열거형 멤버를 지정하고 순서를 0으로 초기화 한다.
            </summary>
            <param name="typeData">이 맴버를 생성할때 사용하는 열거형 맴버</param>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumMemberModel.SetData(System.Enum,System.Int32)">
            <summary>
            필요한 데이터를 기록 한다.
            </summary>
            <param name="typeData">이 맴버를 생성할때 사용하는 열거형 맴버</param>
            <param name="nNumber">순서 정보</param>
        </member>
        <member name="M:DGUtility.EnumToClass.EnumMemberModel.SetData(System.Enum,System.Int32,System.String,System.Int32)">
            <summary>
            필요한 데이터를 기록 한다.
            </summary>
            <param name="typeData">이 맴버를 생성할때 사용하는 열거형 맴버</param>
            <param name="nIndex">맴버가 가지고 있는 값</param>
            <param name="sName">맴버의 이름</param>
            <param name="nNumber">순서 정보</param>
        </member>
    </members>
</doc>
