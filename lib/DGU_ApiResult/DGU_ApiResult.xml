<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DGU_ApiResult</name>
    </assembly>
    <members>
        <member name="T:DGU_ApiResult.ApiResultBaseModel">
            <summary>
            API 결과 공통 베이스.
            </summary>
        </member>
        <member name="P:DGU_ApiResult.ApiResultBaseModel.InfoCode">
            <summary>
            실패시 전달한 코드
            0 : 성공.
            다른 값은 모두 실패
            </summary>
        </member>
        <member name="P:DGU_ApiResult.ApiResultBaseModel.Message">
            <summary>
            전달할 메시지
            </summary>
        </member>
        <member name="F:DGU_ApiResult.ApiResultBaseModel.SuccessString">
            <summary>
            성공했을때 문자
            </summary>
        </member>
        <member name="M:DGU_ApiResult.ApiResultBaseModel.#ctor">
            <summary>
            기본 생성.
            InfoCode가 "0"로 초기화됨
            </summary>
        </member>
        <member name="M:DGU_ApiResult.ApiResultBaseModel.#ctor(System.String,System.String)">
            <summary>
            인포코드와 메시지를 넣고 생성
            </summary>
            <param name="sInfoCode"></param>
            <param name="sMessage"></param>
        </member>
        <member name="M:DGU_ApiResult.ApiResultBaseModel.Reset">
            <summary>
            성공으로 초기화한다.
            </summary>
        </member>
        <member name="M:DGU_ApiResult.ApiResultBaseModel.TypeSet(DGU_ApiResult.ApiResultType)">
            <summary>
            타입 세팅
            </summary>
            <param name="typeApiResult"></param>
        </member>
        <member name="M:DGU_ApiResult.ApiResultBaseModel.IsSuccess">
            <summary>
            InfoCode값이 성공값인지 여부
            </summary>
            <returns></returns>
        </member>
        <member name="T:DGU_ApiResult.ApiResultModel`1">
            <summary>
            제네릭으로 사용해볼까해서 테스트중
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:DGU_ApiResult.ApiResultModel`1.ResultObject">
            <summary>
            전달할 오브젝트
            </summary>
        </member>
        <member name="M:DGU_ApiResult.ApiResultModel`1.#ctor">
            <summary>
            기본 생성(비권장)
            </summary>
            <remarks>
            스웨거용 빈생성자이다.<br />
            일반적인 경우 사용하면 안된다.
            </remarks>
        </member>
        <member name="M:DGU_ApiResult.ApiResultModel`1.#ctor(`0)">
            <summary>
            
            </summary>
            <param name="model"></param>
        </member>
        <member name="T:DGU_ApiResult.ApiResultObjectModel">
            <summary>
            스웨거에 노출시키지 않고 모델을 리턴할때 사용한다.
            테스트용으로 사용해도된다.(매번 새로운 모델을 만들기 힘들기 때문)
            </summary>
        </member>
        <member name="P:DGU_ApiResult.ApiResultObjectModel.ResultObject">
            <summary>
            전달할 오브젝트
            </summary>
        </member>
        <member name="M:DGU_ApiResult.ApiResultObjectModel.#ctor">
            <summary>
            기본 생성
            </summary>
        </member>
        <member name="M:DGU_ApiResult.ApiResultObjectModel.#ctor(System.Object)">
            <summary>
            리턴할 모델 지정하여 생성
            </summary>
            <param name="objResult"></param>
        </member>
        <member name="M:DGU_ApiResult.ApiResultObjectModel.#ctor(System.String,System.String)">
            <summary>
            인포코드와 메시지를 넣고 생성
            </summary>
            <param name="sInfoCode"></param>
            <param name="sMessage"></param>
        </member>
        <member name="T:DGU_ApiResult.ApiResultReady">
            <summary>
            api요청을 처리할때 요청결과처리를 공통화 하는 클래스.
            ApiResultFailModel를 공통으로 리턴하기 위해 베이스를 가지고 있다.
            결과 출력용으로 데이터는 외부로 부터 받아야 한다.
            외부에서는 ToResult를 이용하여 API 전달용 개체를 받는다.
            </summary>
        </member>
        <member name="P:DGU_ApiResult.ApiResultReady.ThisCB">
            <summary>
            컨트롤러베이스의 기능을 쓰기위한 개체
            </summary>
        </member>
        <member name="P:DGU_ApiResult.ApiResultReady.ResultObject">
            <summary>
            전달받은 결과 오브젝트
            </summary>
        </member>
        <member name="P:DGU_ApiResult.ApiResultReady.Success">
            <summary>
            알수 있는 에러를 포함한 성공 여부.
            </summary>
            <remarks>
            알수 없는 에러가 났을때 처리하기위한 용도.<br />
            알수 있는 에러는 이값을을 true로 해둔다.<br />
            알수 없는 에러일때만 이 값이 false가 된다.
            </remarks>
        </member>
        <member name="P:DGU_ApiResult.ApiResultReady.InfoCode">
            <summary>
            실패시 전달한 코드
            0 : 성공.
            다른 값은 모두 실패
            </summary>
        </member>
        <member name="P:DGU_ApiResult.ApiResultReady.Message">
            <summary>
            전달할 메시지
            </summary>
        </member>
        <member name="M:DGU_ApiResult.ApiResultReady.#ctor(Microsoft.AspNetCore.Mvc.ControllerBase)">
            <summary>
            API의 처음부분에서 선언한다.
            'ApiResultBaseModel'로 생성합니다.
            </summary>
            <param name="cbThis">컨트롤러 기능을 사용하기위한 인스턴스</param>
        </member>
        <member name="M:DGU_ApiResult.ApiResultReady.#ctor(Microsoft.AspNetCore.Mvc.ControllerBase,DGU_ApiResult.ApiResultBaseModel)">
            <summary>
            API의 처음부분에서 선언한다.
            </summary>
            <param name="cbThis">컨트롤러 기능을 사용하기위한 인스턴스</param>
            <param name="arModel">리턴에 사용할 모델</param>
        </member>
        <member name="M:DGU_ApiResult.ApiResultReady.ApiResultInfoSet(System.String,System.String)">
            <summary>
            Api 결과 정보 저장
            </summary>
            <param name="sInfoCode"></param>
            <param name="sMessage"></param>
        </member>
        <member name="M:DGU_ApiResult.ApiResultReady.ApiResultInfoSet(DGU_ApiResult.ApiResultType,System.String)">
            <summary>
            Api 결과 정보 저장
            </summary>
            <param name="typeInfoCode"></param>
            <param name="sMessage"></param>
        </member>
        <member name="M:DGU_ApiResult.ApiResultReady.IsSuccess">
            <summary>
            InfoCode값이 성공값인지 여부
            </summary>
            <returns></returns>
        </member>
        <member name="M:DGU_ApiResult.ApiResultReady.ToResult">
            <summary>
            API끝에서 호출한다.
            ApiResult를 생성하여 리턴해 준다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DGU_ApiResult.ApiResultReady.ToResult(System.Object)">
            <summary>
            API끝에서 호출하여 'ObjectResult'를 생성하여 리턴해 준다.
            만들어지는 결과의 ApiResultBaseModel데이터는 this 기준이다.
            </summary>
            <param name="objResultData">전달할 모델</param>
            <returns></returns>
        </member>
        <member name="T:DGU_ApiResult.ApiResultType">
            <summary>
            자주쓰는 API 결과 타입
            </summary>
        </member>
        <member name="F:DGU_ApiResult.ApiResultType.None">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:DGU_ApiResult.ApiResultType.PermissionCheckError">
            <summary>
            권한 체크중 오류 발생
            </summary>
        </member>
        <member name="F:DGU_ApiResult.ApiResultType.LoginNecessaryError">
            <summary>
            로그인 필요
            </summary>
        </member>
        <member name="F:DGU_ApiResult.ApiResultType.TargetFindError">
            <summary>
            대상을 찾지 못했다.
            </summary>
        </member>
    </members>
</doc>
